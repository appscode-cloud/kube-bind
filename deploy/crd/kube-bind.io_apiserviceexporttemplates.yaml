---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: apiserviceexporttemplates.kube-bind.io
spec:
  group: kube-bind.io
  names:
    kind: APIServiceExportTemplate
    listKind: APIServiceExportTemplateList
    plural: apiserviceexporttemplates
    singular: apiserviceexporttemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'APIServiceExportTemplate : TODO'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec specifies the connections & resource sync information
              for an APIServiceExport object
            properties:
              permissionClaims:
                items:
                  properties:
                    labels:
                      items:
                        enum:
                        - id
                        - config
                        - backup_via
                        - catalog
                        - connect_via
                        - exposed_by
                        - monitored_by
                        - offshoot
                        - restore_into
                        - scaled_by
                        - view
                        - cert_issuer
                        - policy
                        - recommended_for
                        - ops
                        type: string
                      type: array
                    level:
                      type: string
                    nameTemplate:
                      type: string
                    namespacePath:
                      type: string
                    references:
                      description: "References are a jsonpath that returns a CSV formatted
                        references to target resources \n If each row has a single
                        column, it is target name. Target resource is non-namespaced
                        or uses the same namespace as the source resource. Example:
                        n1 n2 \n If each row has two columns, it is target [name,namespace].
                        Example: n1,ns1 n2,ns2 \n If each row has three columns, it
                        is target [name,namespace,kind]. Example: n1,ns1,k1 n2,ns2,k2
                        \n If each row has four columns, it is target [name,namespace,kind,apiGroup].
                        Example: n1,ns1,k1,apiGroup1 n2,ns2,k2,apiGroup2"
                      items:
                        type: string
                      type: array
                    selector:
                      description: A label selector is a label query over a set of
                        resources. The result of matchLabels and matchExpressions
                        are ANDed. An empty label selector matches all objects. A
                        null label selector matches no objects.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    selectorPath:
                      type: string
                    target:
                      description: TypeMeta describes an individual object in an API
                        response or request with strings representing the type of
                        the object and its API schema version. Structures that are
                        versioned or persisted should inline TypeMeta.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      type: object
                    targetLabelPath:
                      description: 'default: metadata.labels'
                      type: string
                    type:
                      enum:
                      - MatchSelector
                      - MatchName
                      - MatchRef
                      - OwnedBy
                      type: string
                    verbs:
                      properties:
                        consumer:
                          items:
                            type: string
                          type: array
                        provider:
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - labels
                  - target
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
